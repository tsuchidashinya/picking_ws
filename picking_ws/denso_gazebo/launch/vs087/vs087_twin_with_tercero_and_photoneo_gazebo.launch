<launch>
  <!-- Override robot_name argument -->
  <arg name="robot_name" default="vs087" />
  <arg name="robot_options" default="vs087_with_tercero_and_photoneo" />
  <arg name="fix_robot_options" default="vs087_with_tercero" />

  <arg name="use_custom_ros_control" default="false" />

  <arg name="angle_tolerance" default="0" />
  <arg name="ratio_threshold" default="0.3" />
  <arg name="time" default="0.01" />

  <!-- Robot description argument -->
  <arg name="robot_description" value="$(arg robot_name)_description" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find denso_gazebo)/worlds/denso.world"/>
  </include>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <arg name="model" value="$(find denso_gazebo)/urdf/$(arg robot_name)/$(arg robot_options).gazebo.xacro"/>
  <param name="robot_description" type="str" command="$(find xacro)/xacro --inorder $(arg model) use_custom_ros_control:=$(arg use_custom_ros_control) angle_tolerance:=$(arg angle_tolerance)"/>

  <arg name="gui" default="true"/>
  <param name="use_gui" value="$(arg gui)"/>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot_name)" />

  <group if="$(arg use_custom_ros_control)">
    <include ns="/$(arg robot_name)" file="$(find denso_gazebo_control)/config/$(arg robot_name)/$(arg fix_robot_options)/$(arg fix_robot_options).launch.xml" />
  </group>

  <rosparam file="$(find denso_gazebo)/config/$(arg robot_name)/$(arg fix_robot_options)_control_sim.yaml" command="load" />
  <rosparam file="$(find denso_gazebo)/config/$(arg robot_name)/robot2_control_sim.yaml" command="load" />
  <rosparam ns="/$(arg robot_name)" command="load" file="$(find denso_gazebo_control)/config/$(arg robot_name)/$(arg fix_robot_options)/$(arg fix_robot_options)_joint_limit.yaml" />
  <rosparam ns="/robot2" command="load" file="$(find denso_gazebo_control)/config/$(arg robot_name)/$(arg fix_robot_options)/robot2_joint_limit.yaml" />
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/$(arg robot_name)" args="joint_state_controller arm_controller gripper_controller" />

  <!-- robot_state_publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/$(arg robot_name)/joint_states" />
  </node>

  <!-- joint_state_publisher -->
  <arg name="robot_joint_states" default="[/$(arg robot_name)/joint_states]"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="False"/>
    <rosparam param="/source_list" subst_value="True">$(arg robot_joint_states)</rosparam>
  </node>

  <!-- grasp contacts republisher in Gazebo -->
  <include file="$(find denso_gazebo_control)/launch/gazebo_grasp_contacts_republisher.launch">
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <!-- grasp contacts republisher in Gazebo for robot2 -->
  <include file="$(find denso_gazebo_control)/launch/gazebo_grasp_contacts_republisher_2.launch" >
    <arg name="robot_name" value="robot2" />
  </include>

  <!-- Denso-Arm-Sim driver -->
  <node pkg="denso_gazebo" type="listener.py" name="denso_robot_arm_listener_sim" output="screen">
    <param name="robot_name" value="$(arg robot_name)" />
  </node>

  <!-- Tercero-Sim driver -->
  <node pkg="tercero_gazebo" type="listener.py" name="tercero_listener_sim_node" output="screen">
    <param name="robot_name" value="$(arg robot_name)" />
  </node>
  <include file="$(find denso_gazebo_grasp)/launch/tercero_grasp_server.launch">
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="angle_tolerance" value="$(arg angle_tolerance)" />
    <arg name="ratio_threshold" value="$(arg ratio_threshold)" />
    <arg name="time" value="$(arg time)" />
  </include>

  <!-- robot2 -->
  <arg name="model2" value="$(find denso_gazebo)/urdf/$(arg robot_name)/vs087_with_tercero_twin.gazebo.xacro" />
  <param name="robot_description2" type="str" command="$(find xacro)/xacro --inorder $(arg model2) "/>
  <arg name="init_pose" default="-x 0 -y 1 -z 0 -R 0 -P 0 -Y 0" />
  <node name="spawn_urdf2" pkg="gazebo_ros" type="spawn_model" args="$(arg init_pose) -param robot_description2 -urdf -model robot2" />


  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find denso_gazebo)/config/vs087/vs087_with_tercero_twin_control_sim.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner2" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/robot2" args="arm_controller joint_state_controller gripper_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher2" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/robot2/joint_states" />
  </node>

  <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="False"/>
  </node>-->

  <!-- grasp contacts republisher in Gazebo -->
  <node name="gazebo_grasp_contacts_republisher_node2" pkg="denso_gazebo_control" type="gazebo_grasp_contacts_bridge_node" output="screen">
    <param name="robot_name" value="robot2" />
  </node>

  <!-- Denso-Arm-Sim driver -->
  <node pkg="denso_gazebo" type="listener.py" name="denso_robot_arm_listener_sim2" output="screen">
    <param name="robot_name" value="robot2" />
  </node>

  <!-- Tercero-Sim driver -->
  <node pkg="tercero_gazebo" type="listener.py" name="tercero_listener_sim_node2" output="screen">
    <param name="robot_name" value="robot2" />
  </node>
  <node pkg="denso_gazebo_grasp" type="tercero_grasp_service_server" name="tercero_grasp_service_server2" output="screen">
    <param name="robot_name" value="robot2" />
    <param name="angle_tolerance" value="$(arg angle_tolerance)" />
    <param name="ratio_threshold" value="$(arg ratio_threshold)" />
    <param name="time" value="$(arg time)" />
  </node>

  <!-- Tercero-Sim driver for robot2-->
  <node pkg="tercero_gazebo" type="listener.py" name="tercero_listener_sim_node_2" output="screen" >
    <param name="robot_name" value="robot2" />
  </node>
  <include file="$(find denso_gazebo_grasp)/launch/tercero_grasp_server_2.launch">
    <arg name="robot_name" value="robot2" />
    <arg name="angle_tolerance" value="0" />
    <arg name="ratio_threshold" value="0.3" />
    <arg name="time" value="0.01" />
  </include>

</launch>
