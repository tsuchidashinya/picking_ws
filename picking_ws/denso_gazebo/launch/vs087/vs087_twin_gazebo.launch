<launch>
  <!-- Override robot_name argument -->
  <arg name="robot_name" default="vs087" />
  <arg name="robot_options" default="vs087" />

  <!-- Robot description argument -->
  <arg name="robot_description" value="$(arg robot_name)_description" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find denso_gazebo)/worlds/denso.world"/>
  </include>

  <arg name="gui" default="true"/>
  <param name="use_gui" value="$(arg gui)"/>



  <group ns = "robot1">
    <arg name="model" value="$(find denso_descriptions)/$(arg robot_description)/$(arg robot_options)/$(arg robot_options).urdf.xacro"/>
    <param name="robot_description" type="str" command="$(find xacro)/xacro --inorder $(arg model)"/>

    <arg name="init_pose" value="-x 1 -y 1 -z 0" />
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="$(arg init_pose) -param robot_description -urdf -model robot1" />

    <rosparam file="$(find denso_gazebo)/config/$(arg robot_name)/$(arg robot_options)_control_sim.yaml" command="load" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/robot1" args="joint_state_controller arm_controller" />

    <!-- robot_state_publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    </node>

    <!-- joint_state_publisher -->
    <arg name="robot_joint_states" default="[/joint_states]"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="False"/>
      <rosparam param="/source_list" subst_value="True">$(arg robot_joint_states)</rosparam>
    </node>
  </group>

  <group ns = "robot2">
    <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
    <!-- <param name="robot_description" type="str" textfile="$(find denso_descriptions)/$(arg robot_description)/$(arg robot_name)/$(arg robot_name).urdf"/> -->
    <!-- <param name="robot_description" type="str" textfile="$(find denso_descriptions)/$(arg robot_description)/$(arg robot_options)/$(arg robot_options).urdf.xacro"/> -->
    <arg name="model2" value="$(find denso_descriptions)/$(arg robot_description)/$(arg robot_options)/$(arg robot_options).urdf.xacro"/>
    <param name="robot_description" type="str" command="$(find xacro)/xacro --inorder $(arg model2)"/>

    <arg name="init_pose2" value="-x 1 -y -1 -z 0" />

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="$(arg init_pose2) -param robot_description -urdf -model robot2" />


    <rosparam file="$(find denso_gazebo)/config/$(arg robot_name)/$(arg robot_options)_control_sim.yaml" command="load" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/robot2" args="joint_state_controller arm_controller" />

    <!-- robot_state_publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
      <remap from="/joint_states" to="/robot2/joint_states" />
    </node>

    <!-- joint_state_publisher -->
    <arg name="robot_joint_states2" value="[/robot2/joint_states]"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="False"/>
      <rosparam param="/source_list" subst_value="True">$(arg robot_joint_states2)</rosparam>
    </node>

  </group>


</launch>

